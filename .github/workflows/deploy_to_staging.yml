
#name: Build and deploy ASP.Net Core app to Azure Web App - wa-github-workflows
name: deploy to staging

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    permissions: write-all
    
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
          
      - name: Set up dependency caching for faster builds
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet publish -c Release -o ./publish
      
      #      - name: List files - ls 1a
      #        run: ls -1a
      #      - name: List all files - ls -R
      #        run: ls -R
      
      - name: Run Tests
        run: dotnet test --logger "trx;LogFileName=test_results.trx" --results-directory ./TestResults
        continue-on-error: true  # Allow the job to continue even if tests fail
      
      - name: Add Dorny test results to GitHub actions result
        uses: dorny/test-reporter@v1
        if: always()  # Always run this step even if tests fail
        with:
          name: Test Results
          path: ./TestResults/*.trx  # Path to the TRX test result files
          reporter: dotnet-trx  # Use the .NET TRX parser
          fail-on-error: false  # Do not fail the workflow if the report has issues

      - name: Upload test results in to GitHub actions in a zip file
        uses: actions/upload-artifact@v4 # Always run this step even if tests fail
        if: ${{ always() }}
        with:
          name: dotnet-results
          path: ./TestResults/*.trx       

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'wa-github-workflows'
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: ./publish
